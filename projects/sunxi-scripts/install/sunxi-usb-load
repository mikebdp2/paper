#!/bin/bash

# Copyright (C) 2016-2018 Paul Kocialkowski <contact@paulk.fr>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Size in blocks (512 B)
BOOT_OFFSET=16
BOOT_SIZE=2048

usage() {
	printf "$executable [action] (boot image|kernel files) (rootfs medium)\n" >&2

	printf "\nActions:\n" >&2
	printf "  detect - Detect a USB device in FEL mode\n" >&2
	printf "  boot - Load and execute the boot image via USB in FEL mode\n" >&2
	printf "  kernel - Load and execute appended kernel from kernel files via USB in fastboot mode\n" >&2

	usage_storage_common

	printf "\nEnvironment variables:\n" >&2
	printf "  SUNXI_TOOLS_PATH - Path to sunxi-tools\n" >&2
	printf "  ANDROID_TOOLS_PATH - Path to android-tools\n" >&2
}

detect() {
	sunxi-fel version
}

boot() {
	local boot_image_path=$1

	printf "Configuration summary:\n"
	printf "  Boot image path: $boot_image_path\n\n"

	detect

	sunxi-fel uboot "$boot_image_path"

	printf "\nUSB boot completed\n"
}

kernel() {
	local kernel_files_path=$1
	local rootfs_medium=$2

	local kernel_image_path="$kernel_files_path/$KERNEL.$IMG"
	local cmdline_path="$kernel_files_path/$CMDLINE-$rootfs_medium"
	local cmdline

	printf "Configuration summary:\n"
	printf "  Kernel files path: $kernel_files_path\n"
	printf "  Rootfs medium: $rootfs_medium\n"
	printf "  Kernel image path: $kernel_image_path\n"
	printf "  Cmdline path: $cmdline_path\n\n"

	cmdline=$( cat "$cmdline_path" )

	fastboot boot "$kernel_image_path" -c "$cmdline"

	printf "\nUSB kernel boot completed\n"
}

setup() {
	root=$( realpath "$( dirname "$0" )" )
	executable=$( basename "$0" )

	source "$root/common"

	if [ -n "$SUNXI_TOOLS_PATH" ]
	then
		PATH="$PATH:$SUNXI_TOOLS_PATH"
	fi

	if [ -n "$ANDROID_TOOLS_PATH" ]
	then
		PATH="$PATH:$ANDROID_TOOLS_PATH"
	fi
}

sunxi_usb_load() {
	local action=$1
	local boot_image_path=$2
	local kernel_files_path=$2
	local rootfs_medium=$3

	set -e

	setup "$@"

	if [ -z "$action" ]
	then
		usage
		exit 1
	fi

	case $action in
	"detect")
		requirements "sunxi-fel"
		detect
		;;
	"boot")
		if [ -z "$boot_image_path" ]
		then
			usage
			exit 1
		fi

		requirements "sunxi-fel"
		boot "$boot_image_path"
		;;
	"kernel")
		if [ -z "$kernel_files_path" ] || [ -z "$rootfs_medium" ]
		then
			usage
			exit 1
		fi

		requirements "fastboot"
		kernel "$kernel_files_path" "$rootfs_medium"
		;;
	*)
		usage
		exit 1
		;;
	esac
}

sunxi_usb_load "$@"
