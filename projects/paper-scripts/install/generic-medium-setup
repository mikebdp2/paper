#!/bin/bash

# Copyright (C) 2016-2018 Paul Kocialkowski <contact@paulk.fr>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

ROOTFS_PARTITION_INDEX=1

usage() {
	printf "$executable [action] [storage] [rootfs tarball|kernel files] (device)\n" >&2

	printf "\nActions:\n" >&2
	printf "  partitions - Setup partitions on storage\n" >&2
	printf "  rootfs - Install rootfs tarball to storage\n" >&2

	usage_storage_common

	printf "\nEnvironment variables:\n" >&2
	usage_variables_storage
	usage_variables_partitions
}

partitions() {
	local storage_path=$1

	local storage_rootfs_path

	printf "Configuration summary:\n"
	printf "  Storage path: $storage_path\n\n"

	storage_affect_confirm "$storage_path"

	partitions_unmount "$storage_path"

	fdisk_arguments=( "o" "n" "p" "1" "" "" "w" )
	partitions_create_table "$storage_path" "$fdisk_arguments"

	storage_rootfs_path=$( storage_partition_path "$storage_path" "$ROOTFS_PARTITION_INDEX" )
	partition_create_ext4 "$storage_rootfs_path"

	printf "\nPartitions setup completed\n"
}

rootfs() {
	local storage_path=$1
	local rootfs_tarball_path=$2

	rootfs_install_common "$storage_path" "$rootfs_tarball_path" "$ROOTFS_PARTITION_INDEX"
}

setup() {
	root=$( realpath "$( dirname "$0" )" )
	executable=$( basename "$0" )

	source "$root/common"
}

generic_medium_setup() {
	local action=$1
	local storage_path=$2
	local rootfs_tarball_path=$3
	local kernel_files_path=$3
	local device=$4

	set -e

	setup "$@"

	if [ -z "$action" ] || [ -z "$storage_path" ]
	then
		usage
		exit 1
	fi

	case $action in
	"partitions")
		partitions_requirements_common
		partitions "$storage_path"
		;;
	"rootfs")
		if [ -z "$rootfs_tarball_path" ]
		then
			usage
			exit 1
		fi

		rootfs_requirements_common
		rootfs "$storage_path" "$rootfs_tarball_path"
		;;
	*)
		usage
		exit 1
		;;
	esac
}

generic_medium_setup "$@"
